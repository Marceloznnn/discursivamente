{% extends 'layouts/base.twig' %}

{% block styles %}
  <link rel="stylesheet" href="/assets/css/pages/curso/aluno/show.css">
  <style>
    /* Estilo simples para esconder comentários inicialmente */
    .course-comments-section { display: none; }
    .course-comments-section.active { display: block; }
    .show-comments-btn { 
      display: block; 
      margin: 2rem auto 1rem auto; 
      padding: 0.8rem 2rem; 
      background: var(--primary-wine, #722f37); 
      color: #fff; 
      border: none; 
      border-radius: 8px; 
      font-size: 1.1rem; 
      font-weight: 600; 
      cursor: pointer; 
      transition: background 0.2s;
    }
    .show-comments-btn:hover { background: #5a252b; }
    .see-more-comments-btn {
      display: block;
      margin: 1.5rem auto 0 auto;
      padding: 0.7rem 1.5rem;
      background: var(--neutral-medium, #e9ecef);
      color: var(--primary-wine, #722f37);
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: background 0.2s;
    }
    .see-more-comments-btn:hover { background: #d4af37; color: #fff; }

    .user-progress-section {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(114,47,55,0.07);
      padding: 2rem;
      margin-bottom: 2.5rem;
      border: 1px solid #e9ecef;
      max-width: 500px;
      margin-left: auto;
      margin-right: auto;
      text-align: center;
    }
    .user-progress-title {
      color: var(--primary-wine, #722f37);
      font-size: 1.3rem;
      font-weight: 700;
      margin-bottom: 1.2rem;
    }
    .user-progress-bar-bg {
      width: 100%;
      height: 22px;
      background: #f0f0f0;
      border-radius: 12px;
      overflow: hidden;
      margin-bottom: 0.7rem;
      border: 1px solid #e9ecef;
      position: relative;
    }
    .user-progress-bar-fill {
      height: 100%;
      background: linear-gradient(90deg, #d4af37 0%, #722f37 100%);
      border-radius: 12px 0 0 12px;
      transition: width 0.7s cubic-bezier(.4,1,.7,1);
      text-align: right;
      color: #fff;
      font-weight: bold;
      font-size: 1rem;
      line-height: 22px;
      padding-right: 10px;
      min-width: 40px;
    }
    .user-progress-label {
      font-size: 1.05rem;
      color: #495057;
      font-weight: 500;
      margin-bottom: 0.2rem;
    }
  </style>
{% endblock %}

{% block content %}
  <div class="course-page">

    <!-- Cabeçalho do Curso -->
    <section class="course-header">
      <h1 class="course-title">{{ course.title }}</h1>
      <p class="course-description">{{ course.description }}</p>
    </section>

    <!-- Ações de Participação -->
    <section class="course-actions">
      <div class="action-buttons">
        {% if session.user %}
          {% if isParticipating %}
            <form action="/courses/{{ course.id }}/leave" method="post" class="action-form">
              <button type="submit" class="button-exit">
                Sair do curso
              </button>
            </form>
            <div class="button-group">
              <a href="/courses/{{ course.id }}/modules" class="button-materials">
                Ver Módulos
              </a>
              <a href="/courses/{{ course.id }}/forum" class="button-forum">
                <i class="fas fa-comments"></i> Fórum de Discussão
              </a>
            </div>
          {% else %}
            <form action="/courses/{{ course.id }}/join" method="post" class="action-form">
              <button type="submit" class="button-join">
                Participar do curso
              </button>
            </form>
          {% endif %}
        {% else %}
          <button class="button-disabled" disabled>
            Faça login para participar
          </button>
        {% endif %}
      </div>
    </section>

    <!-- Avaliação do Curso -->
    <section class="course-rating-section">
      <h2>Média de Avaliação</h2>
      {% if ratingData.total_ratings > 0 %}
        <div class="course-rating-stars">
          {% set avg = ratingData.average_rating %}
          {% for i in 1..5 %}
            {% if i <= avg|round(0, 'floor') %}
              <span class="star filled">★</span>
            {% elseif i - avg < 1 and i > avg %}
              <span class="star half">★</span>
            {% else %}
              <span class="star">☆</span>
            {% endif %} 
          {% endfor %}
          <span class="rating-value">{{ avg|number_format(1, ',', '.') }} / 5</span>
          <span class="rating-count">({{ ratingData.total_ratings }} avaliações)</span>
        </div>
      {% else %}
        <p class="no-rating">Ainda não há avaliações para este curso.</p>
      {% endif %}
    </section>

    <!-- Botão para mostrar comentários -->
    <button id="show-comments-btn" class="show-comments-btn" type="button">Ver comentários</button>

    <!-- Comentários dos alunos -->
    <section class="course-comments-section" id="course-comments-section">
      <h2>Comentários dos alunos</h2>
      {% if comments is not empty %}
        <ul class="course-comments-list" id="course-comments-list">
          {# Os comentários serão controlados via JS #}
          {% for comment in comments %}
            <li class="course-comment" style="display: none;">
              <div class="comment-header">
                <span class="comment-user">
                  {{ commentUserNames[comment.getUserId()]|default('Usuário') }}
                </span>
                <span class="comment-rating">
                  {% for i in 1..5 %}
                    {% if i <= comment.getRating() %}
                      <span class="star filled">★</span>
                    {% else %}
                      <span class="star">☆</span>
                    {% endif %}
                  {% endfor %}
                </span>
                <span class="comment-date">
                  {{ comment.getCreatedAt()|date('d/m/Y H:i') }}
                </span>
              </div>
              <div class="comment-body">
                {{ comment.getComment()|e }}
              </div>
            </li>
          {% endfor %}
        </ul>
        <button id="see-more-comments-btn" class="see-more-comments-btn" type="button" style="display:none;">Ver mais</button>
      {% else %}
        <p class="no-comments">Nenhum comentário ainda.</p>
      {% endif %}
    </section>

    {# ===== PROGRESSO DO USUÁRIO NO CURSO ===== #}
    {% if session.user and isParticipating and modulesCount > 0 %}
      {% set totalMaterials = 0 %}
      {% set completedMaterials = 0 %}
      {% for m in modules %}
        {% set entries = entryRepo.findByMaterialId(m.getId()) %}
        {% set totalMaterials = totalMaterials + entries|length %}
        {% for e in entries %}
          {% if completedMaterialsIds is defined and completedMaterialsIds is iterable and e.getId() in completedMaterialsIds %}
            {% set completedMaterials = completedMaterials + 1 %}
          {% endif %}
        {% endfor %}
      {% endfor %}
      {% set progressPercent = totalMaterials > 0 ? (completedMaterials / totalMaterials * 100)|round(0, 'floor') : 0 %}
      <section class="user-progress-section">
        <div class="user-progress-title">Seu progresso neste curso</div>
        <div class="user-progress-bar-bg">
          <div class="user-progress-bar-fill" style="width: {{ progressPercent }}%;">
            {{ progressPercent }}%
          </div>
        </div>
        <div class="user-progress-label">
          {{ completedMaterials }}/{{ totalMaterials }} materiais concluídos
        </div>
      </section>
    {% endif %}

    <div class="back-link">
      <a href="/courses">← Voltar a todos os cursos</a>
    </div>
  </div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
  const showBtn = document.getElementById('show-comments-btn');
  const section = document.getElementById('course-comments-section');
  const comments = Array.from(document.querySelectorAll('.course-comment'));
  const seeMoreBtn = document.getElementById('see-more-comments-btn');
  const COMMENTS_PER_PAGE = 5;
  let shown = 0;

  function showCommentsChunk() {
    const next = shown + COMMENTS_PER_PAGE;
    for (let i = shown; i < next && i < comments.length; i++) {
      comments[i].style.display = '';
    }
    shown = next;
    if (shown < comments.length) {
      seeMoreBtn.style.display = '';
    } else {
      seeMoreBtn.style.display = 'none';
    }
  }

  if (showBtn && section && comments.length) {
    showBtn.addEventListener('click', function() {
      section.classList.add('active');
      showBtn.style.display = 'none';
      showCommentsChunk();
    });
    seeMoreBtn.addEventListener('click', function() {
      showCommentsChunk();
    });
  }
});

// === Atualização dinâmica da barra de progresso do curso ===
function updateCourseProgressBar() {
  const bar = document.querySelector('.user-progress-bar-fill');
  const label = document.querySelector('.user-progress-label');
  fetch(`/courses/{{ course.getId() }}/progress-json`)
    .then(r => r.json())
    .then(data => {
      if (bar && label && data && typeof data.percent !== 'undefined') {
        bar.style.width = data.percent + '%';
        bar.textContent = data.percent + '%';
        label.textContent = `${data.completed}/${data.total} materiais concluídos`;
      }
    });
}
// Permite chamada global (ex: via iframe ou outros scripts)
window.updateCourseProgress = updateCourseProgressBar;
// Opcional: escutar evento customizado
window.addEventListener('materialCompleted', updateCourseProgressBar);
</script>
{% endblock %}
